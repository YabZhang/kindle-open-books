from calibre.web.feeds.recipes import BasicNewsRecipe
import re

class High_Performance_Browser_Networking(BasicNewsRecipe):
    """ TODO: [BUG]: SSL HANDSHAKE FAILURE
        more detail: http://docs.python-requests.org/en/master/community/faq/#what-are-hostname-doesn-t-match-errors
    """

    title = 'High Performance Browser Networking'
    description = "This book is required reading for anyone who cares about web performance; it's already established as the go-to reference on the topic."
    cover_url = 'http://orm-other.s3.amazonaws.com/hpbnsplash/hpbncover.jpg'

    # url_prefix = 'http://chimera.labs.oreilly.com/books/1230000000545/'
    url_prefix = 'https://hpbn.co'
    no_stylesheets = True
    # keep_only_tags = [{ 'class': ['preface', 'chapter', 'index', 'colophon'] }]

    def get_title(self, link):
        return link.contents[0].strip()


    #def append_colophon(self, articles):
    #        colophon = {'title': 'Colophon', 'url': self.url_prefix + 'co01.html'}
    #        articles.append(colophon)


    def generate_vol(self, section):
        chap_links = []

        vol_node = section.findAll('h3')[0]
        vol_name = self.get_title(vol_node)

        for node in section.findAll('a'):

            if '#' in node['href']:
                continue

            chap_title = self.get_title(node)
            chap_link = self.url_prefix + node['href']
            chap_links.append({'title': chap_title, 'url': chap_link})

        return vol_name or '', chap_links


    def parse_index(self):
        soup = self.index_to_soup(self.url_prefix)
        top = soup.find('section', { 'id': 'toc' })

        # p = re.compile('(pr|ch|ix)\d+\.html$')

        result = []
        sections = top.findAll('section')
        print 'count:', len(sections)

        for sec in sections:
            if sec:
                vol = self.generate_vol(sec)
                result.append(vol)
        return result

